// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuGrid_Dotnet.Infrastructure.Context;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuGrid_Dotnet.Migrations
{
    [DbContext(typeof(MottuGridContext))]
    [Migration("20250512143226_V_2")]
    partial class V_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.HasKey("Id");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Branchs", (string)null);
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)");

                    b.Property<Guid>("MotorcycleId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("MotorcycleId");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Motorcycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<int>("EngineType")
                        .HasMaxLength(50)
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("LastRevisionDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Motorcycles", (string)null);
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<double>("Area")
                        .HasPrecision(10, 2)
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<Guid>("YardId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("YardId");

                    b.ToTable("Sections", (string)null);
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Yard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("RAW(16)");

                    b.Property<double>("Area")
                        .HasPrecision(10, 2)
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("BranchId");

                    b.ToTable("Yards", (string)null);
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Branch", b =>
                {
                    b.HasOne("MottuGrid_Dotnet.Domain.Entities.Address", "Address")
                        .WithOne("Branch")
                        .HasForeignKey("MottuGrid_Dotnet.Domain.Entities.Branch", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Log", b =>
                {
                    b.HasOne("MottuGrid_Dotnet.Domain.Entities.Motorcycle", "Motorcycle")
                        .WithMany("Logs")
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motorcycle");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Motorcycle", b =>
                {
                    b.HasOne("MottuGrid_Dotnet.Domain.Entities.Section", "Section")
                        .WithMany("Motorcycles")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Section", b =>
                {
                    b.HasOne("MottuGrid_Dotnet.Domain.Entities.Yard", "Yard")
                        .WithMany()
                        .HasForeignKey("YardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yard");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Yard", b =>
                {
                    b.HasOne("MottuGrid_Dotnet.Domain.Entities.Address", "Address")
                        .WithOne("Yard")
                        .HasForeignKey("MottuGrid_Dotnet.Domain.Entities.Yard", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MottuGrid_Dotnet.Domain.Entities.Branch", "Branch")
                        .WithMany("Yards")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Address", b =>
                {
                    b.Navigation("Branch");

                    b.Navigation("Yard");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Branch", b =>
                {
                    b.Navigation("Yards");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Motorcycle", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("MottuGrid_Dotnet.Domain.Entities.Section", b =>
                {
                    b.Navigation("Motorcycles");
                });
#pragma warning restore 612, 618
        }
    }
}
